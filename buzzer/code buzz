#define NOTE_C4  262
#define NOTE_G3  196
#define NOTE_A3  220
#define NOTE_B3  247
#define NOTE_C4  262

// Pin setup
const int buttonPin = 2; // Pin connected to the button
const int buzzerPin = 8; // Pin connected to the buzzer

// Notes in the melody
int melody[] = { NOTE_G3, NOTE_B3 };
int noteDurations[] = { 8, 8 }; // note durations: 4 = quarter note, 8 = eighth note, etc.
bool running = false; // Tracks if melody is playing

void setup() {
  pinMode(buttonPin, INPUT);
  pinMode(buzzerPin, OUTPUT);
}

void playMelody() {
  running = true; // Start playing melody
  
  // Array of loop iterations and note durations to create the melody sequence
  int loops[] = { 10, 10, 100 }; 
  int durations[] = { 5000, 2500, 1000 };

  for (int i = 0; i < 3 && running; i++) {
    for (int x = 0; x < loops[i] && running; x++) {
      for (int thisNote = 0; thisNote < 2 && running; thisNote++) {
        
        // Stop melody if button is pressed
        if (digitalRead(buttonPin) == HIGH) {
          stopMelody();
          return;
        }
        
        int noteDuration = durations[i] / noteDurations[thisNote];
        tone(buzzerPin, melody[thisNote], noteDuration);
        
        int pauseBetweenNotes = noteDuration * 1.30;
        delay(pauseBetweenNotes);
        
        noTone(buzzerPin);
      }
    }
  }
  running = false; // Stop playing melody
}

void stopMelody() {
  noTone(buzzerPin);
  running = false;
}

void loop() {
  // Call playMelody() whenever needed
  if (digitalRead(buttonPin) == HIGH && !running) {
    playMelody();
  }
}

